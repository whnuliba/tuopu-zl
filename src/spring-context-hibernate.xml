<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

   <!-- 导入外部数据源 -->
   <context:property-placeholder ignore-unresolvable="true"  location="classpath*:/jdbc.properties"/>
   <!-- 配置SessionFactory -->
     <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.generate_statistics">false</prop> <!-- 开启hibernate的CRUD统计 -->
				<!-- <prop key="hibernate.jdbc.batch_size">100</prop>  
				<prop key="hibernate.order_inserts">true</prop>  
				<prop key="hibernate.order_updates">true</prop>  -->
				
			</props>
		</property>
		<!--  
		<property name="packagesToScan">
			<list>
				<value>com.zttech.sys.entity</value>
			</list>
		</property>
		-->
		<!-- <property name="entityInterceptor">
			<bean id="baseEntityInterceptor" class="com.zttech.sys.interceptor.EntityInterceptor" />
		</property> -->
	</bean>
	
     <!-- 配置声明式事务管理 -->
	<!-- 定义事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean>
        <!-- 配置事务异常封装 -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    
    <!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务  -->
   	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
<!-- 数据源配置, 使用 druid 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="dbType" value = "${jdbc.type}" /> 
	    <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
	    <property name="driverClassName" value="${jdbc.driver}" />
	    
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${jdbc.pool.init}" />
		<property name="minIdle" value="${jdbc.pool.minIdle}" /> 
		<property name="maxActive" value="${jdbc.pool.maxActive}" />
		
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />
		
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		
		<property name="validationQuery" value="${jdbc.testSql}" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用）
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> -->
		
		<!-- <property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" /> -->
		
		<!-- <property name="timeBetweenLogStatsMillis" value="60000" /> -->
 
		<!-- 配置监控统计拦截的filters -->
	    <property name="filters" value="wall,stat,mergeStat" /> 
	    <!-- <property name="connectionProperties" value="druid.logType=slf4j;druid.stat.slowSqlMillis=10;druid.stat.logSlowSql=true" /> -->
	    
	</bean>
	
		<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">   
        <property name="dataSource" ref="dataSource"/>
    </bean>
</beans>
